@page "/contact"
@inject ITitleGeneratorService TitleGenerator
@inject IJSRuntime JSRuntime

<PageTitle>NPC</PageTitle>
<h1>NPC</h1>
<div class="npc-container">
    @if (!string.IsNullOrEmpty(non_player_characters))
    {
        <div class="text-grid">
            <div class="generated-text">
                <h2>Non-Player Character</h2>
                <p>@non_player_characters</p>
            </div>
            <div class="generated-text">
                <h2>Temperament</h2>
                <p>@tempermant</p>
            </div>
            <div class="generated-text">
                <h2>Nationalities</h2>
                <p>@nationalities</p>
            </div>
            <div class="generated-text">
                <h2>Quirks</h2>
                <p>@quirks</p>
            </div>
            <div class="generated-text">
                <h2>Opponent</h2>
                <p>@opponent</p>
            </div>
            <div class="generated-text">
                <h2>Cult</h2>
                <p>@cult</p>
            </div>
        </div>
    }
    <button @onclick="async () => await Generate()" class="btn-primary generate-title">Generate</button>
</div>

<style>
    .npc-container {
        height: 80vh;
        display: flex;
        flex-direction: column;
        padding: 1rem;
        box-sizing: border-box;
        padding-top: 50px;
    }

    .text-grid {
        display: grid;
        grid-template-columns: repeat(3, 1fr);
        gap: 1rem;
        flex-grow: 1;
        overflow: hidden;
        max-height: calc(80vh - 150px);
    }

    .generated-text {
        color: #d4af37;
        display: flex;
        flex-direction: column;
    }

        .generated-text p {
            font-size: 0.9rem;
            line-height: 1.4;
            margin: 0;
            overflow-y: auto;
            flex-grow: 1;
            padding-right: 10px;
        }
</style>

<script>
    window.unfocusElement = function () {
        document.activeElement.blur();
    };
</script>

@code {
    private string non_player_characters = string.Empty;
    private string tempermant = string.Empty;
    private string nationalities = string.Empty;
    private string quirks = string.Empty;
    private string opponent = string.Empty;
    private string cult = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        await Generate();
    }

    private async Task Generate()
    {
        non_player_characters = await TitleGenerator.GenerateNonPlayerCharacter();
        quirks = await TitleGenerator.GenerateQuirks();
        tempermant = await TitleGenerator.GenerateTemperament();
        cult = await TitleGenerator.GenerateCult();
        opponent = await TitleGenerator.GenerateOpponent();
        nationalities = await TitleGenerator.GenerateNationalities();

        await UnfocusButton();
    }

    private async Task UnfocusButton()
    {
        try { 
            await JSRuntime.InvokeVoidAsync("unfocusElement"); 
        }catch { }
    }
}